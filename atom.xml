<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title> - Articles</title>
    <description>Distributed systems, software design, and more...</description>
    <link>
    https://venilnoronha.io</link>
    
      
      <item>
        <title>Raw TCP Traffic Shaping with Istio 1.1.0</title>
        
          <description>&lt;p&gt;&lt;a href=&quot;https://istio.io/&quot;&gt;Istio&lt;/a&gt; provides sophisticated routing mechanics via concepts
like &lt;a href=&quot;https://istio.io/docs/reference/config/istio.networking.v1alpha3/#VirtualService&quot;&gt;VirtualService&lt;/a&gt;,
&lt;a href=&quot;https://istio.io/docs/reference/config/istio.networking.v1alpha3/#DestinationRule&quot;&gt;DestinationRule&lt;/a&gt;,
&lt;a href=&quot;https://istio.io/docs/reference/config/istio.networking.v1alpha3/#Gateway&quot;&gt;Gateway&lt;/a&gt;,
etc. Istio 1.0 enabled HTTP traffic shifting via &lt;a href=&quot;https://istio.io/docs/tasks/traffic-management/traffic-shifting/#apply-weight-based-routing&quot;&gt;weighted route definitions&lt;/a&gt;.
I was able to contribute a similar feature for TCP/TLS services via my PRs
&lt;a href=&quot;https://github.com/envoyproxy/envoy/pull/4430&quot;&gt;on Envoy&lt;/a&gt; and &lt;a href=&quot;https://github.com/istio/istio/pull/9112&quot;&gt;on Istio&lt;/a&gt;.
The feature in Envoy was released in &lt;a href=&quot;https://www.envoyproxy.io/docs/envoy/latest/intro/version_history#oct-4-2018&quot;&gt;1.8.0&lt;/a&gt;
and the one in Istio will be available in the upcoming &lt;a href=&quot;https://github.com/istio/istio/releases/&quot;&gt;1.1.0&lt;/a&gt;
release.&lt;/p&gt;

</description>
        
        <pubDate>Fri, 19 Oct 2018 13:00:00 +0000</pubDate>
        <link>
        https://venilnoronha.io/raw-tcp-traffic-shaping-with-istio-1.1.0</link>
        <guid isPermaLink="true">https://venilnoronha.io/raw-tcp-traffic-shaping-with-istio-1.1.0</guid>
      </item>
      
    
      
      <item>
        <title>Set sail a production-ready Istio Adapter</title>
        
          <description>&lt;p&gt;So, you’ve walked through the Istio Mixer Adapter &lt;a href=&quot;https://github.com/istio/istio/wiki/Mixer-Out-Of-Process-Adapter-Dev-Guide&quot;&gt;guide&lt;/a&gt; and want to now publish your own &lt;strong&gt;amazing&lt;/strong&gt; adapter? This post will run you through the process of setting sail your own adapter on the seas of production.&lt;/p&gt;

</description>
        
        <pubDate>Sun, 07 Oct 2018 11:49:00 +0000</pubDate>
        <link>
        https://venilnoronha.io/set-sail-a-production-ready-istio-adapter</link>
        <guid isPermaLink="true">https://venilnoronha.io/set-sail-a-production-ready-istio-adapter</guid>
      </item>
      
    
      
      <item>
        <title>A step by step guide to mTLS in Go</title>
        
          <description>&lt;p&gt;Ever wondered what mTLS (mutual TLS) looks like? Come, learn to implement mTLS
using Golang and OpenSSL.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 04 Sep 2018 20:51:00 +0000</pubDate>
        <link>
        https://venilnoronha.io/a-step-by-step-guide-to-mtls-in-go</link>
        <guid isPermaLink="true">https://venilnoronha.io/a-step-by-step-guide-to-mtls-in-go</guid>
      </item>
      
    
      
      <item>
        <title>Designing Asynchronous Functions with Go</title>
        
          <description>&lt;p&gt;Who doesn’t love fully controllable asynchronous APIs? This post is about crafting asynchronous functions using Golang’s &lt;a href=&quot;https://godoc.org/context&quot;&gt;Context&lt;/a&gt;, &lt;a href=&quot;https://gobyexample.com/channels&quot;&gt;Channels&lt;/a&gt;, and &lt;a href=&quot;https://gobyexample.com/goroutines&quot;&gt;Goroutines&lt;/a&gt;.&lt;/p&gt;

</description>
        
        <pubDate>Mon, 02 Apr 2018 20:34:00 +0000</pubDate>
        <link>
        https://venilnoronha.io/designing-asynchronous-functions-with-go</link>
        <guid isPermaLink="true">https://venilnoronha.io/designing-asynchronous-functions-with-go</guid>
      </item>
      
    
      
      <item>
        <title>How we built a simple Game Lobby Manager using Go and Unity</title>
        
          <description>&lt;p&gt;Lobby managers are one of the most critical components of today’s online gaming infrastructure. In this post, I elaborate my experience of building a simple lobby manager using Golang and Unity.&lt;/p&gt;

</description>
        
        <pubDate>Tue, 28 Nov 2017 16:51:00 +0000</pubDate>
        <link>
        https://venilnoronha.io/how-we-built-a-simple-game-lobby-manager-using-go-and-unity</link>
        <guid isPermaLink="true">https://venilnoronha.io/how-we-built-a-simple-game-lobby-manager-using-go-and-unity</guid>
      </item>
      
    
      
      <item>
        <title>Kick start your own Spring Cloud Config Server with MongoDB</title>
        
          <description>&lt;p&gt;Spring Cloud Config Server MongoDB enables the seamless integration of the regular Spring Cloud Config Server with MongoDB to manage external properties for applications across all environments.&lt;/p&gt;

</description>
        
        <pubDate>Sat, 04 Nov 2017 10:38:00 +0000</pubDate>
        <link>
        https://venilnoronha.io/kick-start-your-own-spring-cloud-config-server-with-mongodb</link>
        <guid isPermaLink="true">https://venilnoronha.io/kick-start-your-own-spring-cloud-config-server-with-mongodb</guid>
      </item>
      
    
  </channel>
</rss>
